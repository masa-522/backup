package com.internousdev.kokotown.action;

import java.sql.SQLException;
import java.text.Normalizer;
import java.util.ArrayList;
import java.util.Map;

import org.apache.struts2.interceptor.SessionAware;

import com.internousdev.kokotown.dao.ProductSearchDAO;
import com.internousdev.kokotown.dto.ProductInfoDTO;
import com.internousdev.kokotown.util.KanaUtils;
import com.opensymphony.xwork2.ActionSupport;

	public class ProductSearchPageNumberAction extends ActionSupport implements SessionAware{


		public Map<String,Object> session;

		//検索結果の件数
		public int count;

		//全部で何ページか
		//private int pages;

		//何ページめを表示するか
		private int page;

		//並び順
		private int sortCategory;

		//1ページに何件表示させるか
		private int list;

		//昇順　降順切り替え判定
		private int flag;



		private int sortFlg;

		private int display;

		private String sort;


		private ProductSearchDAO productSearchDAO = new ProductSearchDAO();

		public ArrayList<ProductInfoDTO> productInfoDTOList = new ArrayList<ProductInfoDTO>();




			/*
			 * 検索結果のページ間を移動するAction
			 * 移動先のページの商品情報取得
			 */

		public String execute()throws SQLException {

			String result = ERROR;

			session.put("page", page+1);


			if(sortCategory==0){
				sortCategory=Integer.parseInt(session.get("sortCategory").toString());
			}





			//pages=(int)(count/list)+1;
			display = Integer.parseInt(session.get("display").toString());
			page*=display;
			int sortFlg=Integer.parseInt(session.get("sortFlg").toString());
			int sortCategory=Integer.parseInt(session.get("sortCategory").toString());
			String serachWord=session.get("serachWord").toString();
			String categoryId=session.get("categoryId").toString();

			String keyWord = Normalizer.normalize(serachWord, Normalizer.Form.NFKC);

			keyWord=KanaUtils.toHiragana(keyWord);


			switch(sortCategory){
			case 1:
				if(sortFlg==0){
				sort=" ORDER BY product_name_kana DESC";
				}else{
					sort=" ORDER BY product_name_kana";}
					break;

			case 2:
				if(sortFlg==0){
					sort=" ORDER BY price DESC";
					}else{
						sort=" ORDER BY price";}
						break;

			case 3:
				if(sortFlg==0){
					sort=" ORDER BY release_date DESC";
					}else{
						sort=" ORDER BY release_date";}
						break;

			}

			/*
			 *複数検索ワードをスペースで区切る配列
			 */
			String[] keyWords = keyWord.replace("|","hogehoge").replace("_","|_").replace("　"," ").replace("~","～").replace("%","|%").split("[\\s]+");



			productInfoDTOList =productSearchDAO.getPuroductSerachResult(keyWords, categoryId, page, sortCategory, sort, display);

			session.put("productInfoDTOList", productInfoDTOList);

			int dp1=(page)+1;

			int maxdp2 =Integer.parseInt(session.get("count").toString());

			int dp2=(page)+display;
			if(dp2>=maxdp2){
			dp2=maxdp2;
		};

			session.put("dp1", dp1);
			session.put("dp2", dp2);

			//if(!(sortCategory==Integer.parseInt(session.get("sortFlg").toString()))){
			//session.put("sortFlg", sortCategory);
		//	}



			 result = SUCCESS;
			return result;
		}

		public int getCount() {
			return count;
		}

		public void setCount(int count) {
			this.count = count;
		}



		public int getList() {
			return list;
		}

		public void setList(int list) {
			this.list = list;
		}



		public int getPage() {
			return page;
		}

		public void setPage(int page) {
			this.page = page;
		}




		public int getFlag() {
			return flag;
		}

		public void setFlag(int flag) {
			this.flag = flag;
		}

		public int getSortFlg() {
			return sortFlg;
		}

		public void setSortFlg(int sortFlg) {
			this.sortFlg = sortFlg;
		}

		@Override
		public void setSession(Map<String, Object> session) {
			this.session = session;
		}

		public Map<String, Object> getSession() {
			return session;
		}
	}
