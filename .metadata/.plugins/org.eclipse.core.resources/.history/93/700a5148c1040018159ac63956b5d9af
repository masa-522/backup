package com.internousdev.kokotown.action;

import java.sql.SQLException;
import java.text.Normalizer;
import java.util.ArrayList;
import java.util.Map;

import org.apache.struts2.interceptor.SessionAware;

import com.internousdev.kokotown.dao.ProductSearchCountDAO;
import com.internousdev.kokotown.dao.ProductSearchDAO;
import com.internousdev.kokotown.dto.ProductInfoDTO;
import com.internousdev.kokotown.util.KanaUtils;
import com.opensymphony.xwork2.ActionSupport;

public class ProductSearchListAction extends ActionSupport implements SessionAware  {
	private String categoryId;


	//検索ワード
	private String serachWord;

	//全部で何ページか
	private int pages;

	//何ページ目を表示するか
	private int page;

	//検索結果の件数
	private int count;

	//1ページに何件表示させるか
	//private int list;

	/*並び順
	 * sortCategory商品名1　価格2　発売日3
	 * sortFlg  昇順1 降順0 の判別
	 * sortCategoryとsortFlgを元にsort（並び順）を決定
	 */
	private int sortCategory;
	private int sortFlg;
	private String sort;

	//１ページに何件表示するか
	private int display;

	private ProductSearchDAO productSearchDAO = new ProductSearchDAO();

	private ProductSearchCountDAO productSearchCountDAO = new ProductSearchCountDAO();

	public ArrayList<ProductInfoDTO> productInfoDTOList = new ArrayList<ProductInfoDTO>();

	private Map<String, Object> session;

	/*
	 *
	 *
	 * 1頁に表示する件数を変更メソッド
	 *
	 *
	 *
	 *
	 * */
	public String execute() throws SQLException{

		//（page+1）ページ目が表示
		page=0;

		 sortFlg=Integer.parseInt(session.get("sortFlg").toString());
		 sortCategory=Integer.parseInt(session.get("sortCategory").toString());
		 serachWord=session.get("serachWord").toString();
		 categoryId=session.get("categoryId").toString();


		//半角ｶﾅを全角カナ、①→1等の変換
		 String keyWord = Normalizer.normalize(serachWord, Normalizer.Form.NFKC);

		//全角カナを平仮名に変換
		 keyWord=KanaUtils.toHiragana(keyWord);


		 //sortCategoryとsortFlgを元にsort（並び順）を決定
		 switch(sortCategory){
			case 1:
				if(sortFlg==0){
				sort=" ORDER BY product_name_kana DESC";
				}else{
					sort=" ORDER BY product_name_kana";}
					break;

			case 2:
				if(sortFlg==0){
					sort=" ORDER BY price DESC";
					}else{
						sort=" ORDER BY price";}
						break;

			case 3:
				if(sortFlg==0){
					sort=" ORDER BY release_date DESC";
					}else{
						sort=" ORDER BY release_date";}
						break;

			}

		/*
		 *複数検索ワードをスペースで区切る配列
		 *replace("~","～")はnormalizeで～が~になってしまうのでもどしている
		 */
		String[] keyWords = keyWord.replace("|","hogehoge").replace("_","|_").replace("　"," ").replace("~","～").replace("%","|%").split("[\\s]+");


		//商品情報取得
		productInfoDTOList =productSearchDAO.getPuroductSerachResult(keyWords, categoryId, page, sortCategory, sort,display);


		count=productSearchCountDAO.getPuroductSerachCount(keyWords, categoryId);

		//全部で何ページになるか
		if(count%display==0){
			pages=(count/display);}
		else{
		pages=(int)(count/display)+1;}


		//検索結果○件のうちdp1-dp2番目の商品表示
		int dp1=(page)+1;
		int dp2=(page)+display;

		if(dp2>=count){
		dp2=count;
		};

		session.put("productInfoDTOList", productInfoDTOList);
		session.put("pages", pages);
		session.put("display", display);
		session.put("page", page+1);
		session.put("dp1", dp1);
		session.put("dp2", dp2);

		String result = SUCCESS;

		return result;

	}

	public int getDisplay() {
		return display;
	}

	public void setDisplay(int display) {
		this.display = display;
	}

	public void setSession(Map<String, Object> session) {
		this.session = session;
	}


	public Map<String, Object> getSession() {
		return session;
	}

	public int getPages() {
		return pages;
	}
	public void setPages(int pages) {
		this.pages = pages;
	}
}
