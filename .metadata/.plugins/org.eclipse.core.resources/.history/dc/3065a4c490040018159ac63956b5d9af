package com.internousdev.kokotown.action;


import java.sql.SQLException;
import java.text.Normalizer;
import java.util.ArrayList;
import java.util.Map;

import org.apache.struts2.interceptor.SessionAware;

import com.internousdev.kokotown.dao.ProductSearchCountDAO;
import com.internousdev.kokotown.dao.ProductSearchDAO;
import com.internousdev.kokotown.dto.ProductInfoDTO;
import com.internousdev.kokotown.util.KanaUtils;
import com.opensymphony.xwork2.ActionSupport;



/**
 * @author shibuyamakoto
 * 検索フォームから送られるsearchwWordとcategoryIdを元に実行される検索Action
 * デフォルト
 *発売日 降順
 *9件表示　１ページ目
 */
public class ProductSearchAction extends ActionSupport implements SessionAware {


	//ジャンル検索
	private String categoryId;

	//検索ワード
	private String serachWord;

	//検索結果が全部で何ページか
	private int pages;

	// 何ページ目を表示するか　page＋１頁が表示
	private int page=0;

	//検索結果のヒット件数
	private int count;



	/*並び順
	 * sortCategory商品名1　価格2　発売日3
	 * sort Flg  昇順1 降順0 の判別
	 */
	private int sortCategory=3;
	private int sortFlg;

	/*
	 * 昇順　降順切り替え判定
	 * flag判定値
	 * judge判定元
	 */
	private int flag=1;
	private int judge=1;

	//１ページに何件表示するか
	private int display=9;

	//検索結果○件のうちdp1-dp2番目の商品表示
	int dp1;

	int dp2;

	private String sort;



	private ProductSearchDAO productSearchDAO = new ProductSearchDAO();

	private ProductSearchCountDAO productSearchCountDAO = new ProductSearchCountDAO();

	public ArrayList<ProductInfoDTO> productInfoDTOList = new ArrayList<ProductInfoDTO>();



	private Map<String, Object> session;


	/*
	 * 検索ボタンをクリックすると実行されるメソッド
	 * 表示形式　発売日　降順　9件表示
	 *1-9件表示
	 *検索でヒットした商品の数
	 *ページ数
	 *
	 * */
	public String execute() throws SQLException{


		//半角を全角、①→1等の変換
		String keyWord = Normalizer.normalize(serachWord, Normalizer.Form.NFKC);

		keyWord=KanaUtils.toHiragana(keyWord);

		judge=judge^flag;
		switch(judge){
		case 0:
			sortFlg=0;
			break;
		case 1:
			sortFlg=1;
			break;
		}

		switch(sortCategory){
		case 1:
			if(sortFlg==0){
			sort=" ORDER BY product_name_kana DESC";
			}else{
				sort=" ORDER BY product_name_kana";}
				break;

		case 2:
			if(sortFlg==0){
				sort=" ORDER BY price DESC";
				}else{
					sort=" ORDER BY price";}
					break;

		case 3:
			if(sortFlg==0){
				sort=" ORDER BY release_date DESC";
				}else{
					sort=" ORDER BY release_date";}
					break;

		}

		/*
		 *複数検索ワードをスペースで区切る配列
		 */
		String[] keyWords = keyWord.replace("|","hogehoge").replace("_","|_").replace("　"," ").replace("~","～").replace("%","|%").split("[\\s]+");

		//1ページに表示される商品情報取得
		productInfoDTOList =productSearchDAO.getPuroductSerachResult(keyWords, categoryId, page, sortCategory, sort, display);

		//検索結果の商品の数
		count=productSearchCountDAO.getPuroductSerachCount(keyWords, categoryId);

		//全部で何ページになるか
		if(count%display==0){
			pages=(count/display);}
		else{
		pages=(int)(count/display)+1;}

		dp1=1;
		dp2=(page)+display;
		if(dp2>=count){
		dp2=count;
	};

		session.put("dp1", dp1);
		session.put("dp2", dp2);

		session.put("productInfoDTOList", productInfoDTOList);
		session.put("count", count);
		session.put("pages", pages);
		session.put("page", page+1);
		session.put("serachWord", serachWord);
		session.put("categoryId", categoryId);
		session.put("sortCategory", sortCategory);
		session.put("sortFlg", sortFlg);
		session.put("judge",judge);
		session.put("display", display);
		session.put("dp1", dp1);
		session.put("dp2", dp2);

		String result = SUCCESS;
		return result;
	}

	public void setCategoryId(String categoryId){
		this.categoryId = categoryId;
	}

	public String getCategoryId(){
		return categoryId;
	}

	public void setSerachWord(String serachWord){
		this.serachWord = serachWord;
	}

	public String getSearchWord(){
		return serachWord;
	}



	public void setSession(Map<String, Object> session) {
		this.session = session;
	}


	public Map<String, Object> getSession() {
		return session;
	}





	public int getPages() {
		return pages;
	}


	public void setPages(int pages) {
		this.pages = pages;
	}






}
